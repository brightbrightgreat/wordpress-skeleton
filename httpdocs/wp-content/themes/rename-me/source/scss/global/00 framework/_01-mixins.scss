//-----------------------------------------------------------
// MIXINS
//-----------------------------------------------------------

/**
 * Font-size
 *
 * Generate font-size definitions in REM for hip browsers, and equivalent PX for old ones.
 *
 * @param int $font-size The pixel value of the font-size you want to generate.
 * @return string The generated font-size declarations.
 */
@mixin font-size($sizeValue: 16) {
	font-size: ($sizeValue) + px;
	font-size: ($sizeValue / 16) + rem;
}


/**
 * Media Query
 *
 * Generates a media query based on the options
 *
 * @param int $size The pixel value of the screen size, number only
 * @param string $type 'min' (default), 'max', 'min-device', or 'max-device'
 * @param string $orientation 'width', or 'height'
 * @return string The generated meqia query with the content inside.
 */
@mixin mq($size, $type: min, $orientation: width) {
	@media (#{$type}-#{$orientation}: $size / 16 + em) {
		@content;
	}
}


/**
 * Color
 *
 * Grabs the right color from the color map
 *
 * @param string $color The name of the color you want to fetch
 * @param int $shade The shade number, optional. Defaults to 400.
 * @return string The right color code.
 */
@function color($color, $tone: 400) {
	@return map-get(map-get($colors, unquote($color)), $tone);
}


/**
 * Placholder Styles
 *
 * Generates placeholder styles for maximum browser compatibility
 *
 * @param string $content The styles passed
 * @return string The generated styles for all browsers.
 */
@mixin placeholderStyles() {
	&::-webkit-input-placeholder { /* Chrome/Opera/Safari */
	  @content;
	}

	&::-moz-placeholder { /* Firefox 19+ */
	  @content;
	}

	&:-ms-input-placeholder { /* IE 10+ */
	  @content;
	}

	&:-moz-placeholder { /* Firefox 18- */
	  @content;
	}
}
